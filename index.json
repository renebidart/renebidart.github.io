[{"authors":["admin"],"categories":null,"content":"Current I’m a PhD candidate at the University of Waterloo in Systems Design Engineering under Alex Wong. Currently working on on unsupervised learning of disentangled representations.\nRecently did an internship at Shell Street labs using deep learning for finance, and still have some leftover interest in economics.\nFuture I’ll be working as an applied research scientist at Amazon in Vancouver this summer.\nBackground math -\u0026gt; economics -\u0026gt; statistics -\u0026gt; medical imaging -\u0026gt; deep learning\nDuring Master’s in Statistics I worked on deep learning for cancerous cell detection, and presented it at SPIE medical imaging conference. I started my PhD on this topic before realizing that algorithms weren’t the bottleneck in here.\nIn undergrad I studied math and economics at Carleton University, and after graduating worked at the Bank of Canada for a year, on oversight of financial market infrastructure. Between that and the university courses I became fed up with economics, and switched to something more practical.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://renebidart.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Current I’m a PhD candidate at the University of Waterloo in Systems Design Engineering under Alex Wong. Currently working on on unsupervised learning of disentangled representations.\nRecently did an internship at Shell Street labs using deep learning for finance, and still have some leftover interest in economics.","tags":null,"title":"Rene Bidart","type":"authors"},{"authors":null,"categories":null,"content":"Differentiable 3D Affine Transforms Affine transforms were made popular for deep learning in Spatial Transformer Networks, where they introduced an affine transform layer with to transform an image to some cannonical orientation before it was processed by the network. The parameters of the affine transform would be generated by another network, a localization net, that would take the original image as input, and output the 6 parameters of the affine transform.\nThe interesting part was that the transform was made differentable using bilinear sampling, so it could be trained along with the rest of the network using gradient descent.\nFor this work I\u0026rsquo;ll be using variational autoencoders instead of standard CNNs, and 3D instead of 2D transforms. Before we start with this, we should check if these affine transforms can actually be optimized with gradient descent.\nOptimizing 3D Affine Transforms with Gradient Descent Gradient descent has no guarantees of finding a global minimum, so we should do some empirical tests to see when this works, or when a bad local minima is reached. Given an object, $x$, and an affine transformed version of this object, $x_\\alpha$, we would like to minimize the mean squared error between $x$ and $x_\\alpha$, by applying an affine transform to $x$.\nThe solution is straightforward, given an affine transform $\\alpha$, we could take the matrix inverse $\\alpha^{-1}$. In this case we are testing how well the differentiable optimization works, so will optimize an affine transform $\\tau_\\alpha$, and evaluate how close the local minima reached is to the global optima: $$\\arg\\min_\\alpha |(x_\\alpha-\\tau_{\\alpha}(x))|$$\nWe tested this for rotations, translations, and rotations + translations.\nWe found for rotations, the global optima can be reached for roations around $15^\\circ$ for simple objects like a dresser (basically a cube), but this is less consistent with more complex objects like a chair or desk. Rotations of over $45^\\circ$ rarely find the global optimia for any object:\n   Object $15^\\circ$ mse $30^\\circ$ mse $45^\\circ$ mse     Sofa 3.2 13.2 30.3   Dresser 3.6 15.6 36.0   Night stand 5.5 25.6 64.2    Translations seem to be easier to optimize, and translations of $20%$ of the with can be optimized nearly perfectly. Rotations + translations was extremely difficult, and any substantial rotation + translation meant that frequently the global optima wasn\u0026rsquo;t reached, even for simple objects.\nFor this reason we will have to incorporate random restarts into the optimization process, because gradient descent alone frequently is caught in local minima when optimizing affine transforms.\nBelow are some examples of a chair at different rotations, and the orientation the optimization ended at: ","date":1584403200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584403200,"objectID":"4f5c3a274917907940aa41027853e57b","permalink":"https://renebidart.com/post/or7/2020-03-17-open-research-7/","publishdate":"2020-03-17T00:00:00Z","relpermalink":"/post/or7/2020-03-17-open-research-7/","section":"post","summary":"Differentiable 3D Affine Transforms Affine transforms were made popular for deep learning in Spatial Transformer Networks, where they introduced an affine transform layer with to transform an image to some cannonical orientation before it was processed by the network.","tags":null,"title":"Open Research 7: Differentiable Affine Transforms","type":"post"},{"authors":null,"categories":null,"content":"Why Deep Learning Research Doesn\u0026rsquo;t Matter I started a PhD in deep learning because it was a fast moving field that was having growing impact on the world, and dreams of even greater developments. Even without any AGI dreams, deep learning would transform many industries. So by doing deep learning research I would maximize my impact, right?\nI\u0026rsquo;ve slowly realized how incorrect this assumption was. While the field as a whole is incredibly important, the impact of most research is negligible. The average researcher produces almost nothing of value, and academia ends up being an intense fight over credit assignment.\nLet\u0026rsquo;s use our imagination and pretend I\u0026rsquo;m a top researcher for a minute. What kind of impact can I have if my wildest delusions come true?\nOverestimation of Impact Even the most significant work in our field, like AlexNet or Resnets were not particularly novel. Resnets are really a cleaned up version of Highway Networks. As impressive as AlexNet was, Dan Cireşan\u0026rsquo;s GPU accelerated CNNs also won multiple image recognition competitions around the same time. Even GANs were simultaneously discovered by Ian Goodfellow and Michael U. Gutmann. The reality is multiple discoveries of the same concept are so frequent it seems any individual is far from irreplaceable.\nIt\u0026rsquo;s easy to forget that credit assignment is often a winner-takes-all game, so we don\u0026rsquo;t see many other less famous people\u0026rsquo;s work, and assume the winner was the only person enlightened enough to tackle the problem. The reality is even top researchers only move the field forward a small amount, which is not a good sign for the impact of an average researcher.\nThe lesson for people doing research is that communication skills are are just as important as research skills, and credit assignment should be a key focus of everyone doing research, not just those in reinforcement learning.\nBut machine learning has been massively transformative, how can it be that nobody\u0026rsquo;s research is really that indispensable?\nMarginal vs. Total Impact The marginal impact of another average machine learning researcher on the world is insignificant.\nI\u0026rsquo;m not arguing that the entire field of machine learning research does nothing important. In my biased opinion deep learning research has had a massive effect so far, and even if research stopped today, this will continue as we get better at reformulating the shiniest new methods in reinforcement learning for population control and finding hacks to better integrate 98% accuracy approaches with humans in problems like medical imaging.\nAnd this brings us to one of the few useful lessons from economics, the difference between marginal and total benefits:\nAs more and more researchers enter the field, they individually do less and less, even though the field as a whole achieves more. People keep unknowingly redoing each other\u0026rsquo;s work, and still compete to differentiate this work, so there is a massive amount of duplicated work and noise as the number of researchers increase.\nAnother way to look at this is that if there were many fewer people working in deep learning, increased basic research would have much higher impact. In terms of business, competition is for losers, and that\u0026rsquo;s exactly what machine learning research is today. It is a narrow competition, and unless you do sufficiently weird work, or really are the 1%, impact will be limited.\nHow to Create Value? Impact isn\u0026rsquo;t the only thing we care about, so there\u0026rsquo;s nothing morally wrong with working on a problem because you find it cool. Also, if you do make it to the top 1%, because it is competitive and popular area there\u0026rsquo;s also a lot of social capital / income to be gained. Otherwise, it seems the best way to increase rewards is to do weirder research, so there is less competition.\nThe problem with blindly setting $\\epsilon$ higher is more frequent failure. And failure\u0026rsquo;s going to look much worse, instead of producing incremental research, you\u0026rsquo;re an outsider who doesn\u0026rsquo;t even belong in the field. It\u0026rsquo;s hard to avoid looking under the streetlight when everywhere else is darkness. And here we have to build the streetlight before looking under it.\nThere\u0026rsquo;s no hack, more exploration means more risk. But without a significant chance of failure, is it really research? This is good for the field as a whole, or as a professor directing the work of 10 students over a long period of time, but for a young researcher starting off this strategy has massive variance in returns.\nMy speculation is the only option is to be the absolute top 1% at research, or to become an expert in something else (probably software development + domain knowledge). The marginal impact of more domain knowledge for a problem is far more important than more deep learning knowledge for the average PhD student. As deep learning becomes more commoditized, as more and more is hidden under APIs, these specialized skills will have less value. Top deep learning researchers will continue to make a ton of money. Improving process for companies at massive scale creates massive value, so companies will compete for the best people.\nNot to mention that creating value is not the same as capturing it, and research is the prime example of this. Even the best researchers don\u0026rsquo;t see significant value from their work. At most, good research is useful for signaling, so they can be indirectly rewarded through a better paying job or tenure.\nWhat will I do? My perspective on research has changed. Now it\u0026rsquo;s just another job, where pay has been traded to work on something interesting. I\u0026rsquo;ll still going to work on deep learning, I find it interesting and I want to finish my current projects. I\u0026rsquo;ll continue setting $\\epsilon$ a little higher by making research weirder and side projects.\nI didn\u0026rsquo;t realize this thinking about my own work. First had a slightly weaker version of this red pill realizing the people who control the direction of the army of PhD students / researchers are the ones who matter. Through having the power to directly tell us what to work on, like a supervisor or CEO, or even at a more abstract level by changing what is fashionable or good/evil. These ideas can have a massive impact, and we\u0026rsquo;re often unaware its happening. There is no shortage of smart people willing to work very hard who think they are impervious to being infected with an ideology.\nSlacking I didn\u0026rsquo;t get so much done this week, hence the rant rather than some insight about disentangled representations. Really hope this isn\u0026rsquo;t just myself rationalizing my mediocre performance as a PhD student by saying research doesn\u0026rsquo;t matter.\n","date":1583712000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583712000,"objectID":"3f1579537c8939162ba6c40abe1d97df","permalink":"https://renebidart.com/post/or6/2020-03-09-open-research-6/","publishdate":"2020-03-09T00:00:00Z","relpermalink":"/post/or6/2020-03-09-open-research-6/","section":"post","summary":"Why Deep Learning Research Doesn\u0026rsquo;t Matter I started a PhD in deep learning because it was a fast moving field that was having growing impact on the world, and dreams of even greater developments.","tags":null,"title":"Open Research 6: Why Deep Learning Research Doesn't Matter","type":"post"},{"authors":null,"categories":null,"content":"3D Disentangled Representations Last week I started my work on this by implementing a 3d VAE, and now it\u0026rsquo;s time to do something with it. The goal is to disentangle the orientation of an object from its shape, by optimizing over the orientation during training. But the plan is to start with the smallest problem possible, and quickly prove or disprove a hypothesis. I discuss why I think this approach is so important below.\nA simple version of the problem is to limit the transforms to $90^{\\circ}$ rotation. Ignore translations, scaling, or any messier rotation. Because of this small space of only 24 orientations brute force optimization is possible, so more difficult gradient descent optimization can be avoided until later. This is because although optimizing affine transforms is differentiable, local maxima are a serious problem, so optimizing affine transforms with SGD be difficult. This simplified case will still let us test the core questions:\n Is is easier (lower loss) for a VAE to encode a subset of orientations of an objects, rather than the full set? Is it possible to have a VAE learn this subset of orientations, by using an inner loop optimization process over the orientation before gradient descent is applied?  Learning only a subset of orientations is a form of disentangling the orientation and shape, because we will break the latent space into two parts, one to encode the orientation, and another to encode the object.\nSingle orientation \u0026gt; Many Orientations? To show this disentangled representation is useful, I trained VAEs on datasets of all 24 orientations, as well as on a single orientation, and evaluated how they generalized to a test set of a similar distribution. Not surprisingly, the VAE trained on the single orientation performed better (lower reconstruction MSE). We could explain this by saying the limited capacity of a model meant it was more difficult to learn a more varied distribution of all orientations, rather than the single orientation.\nAbove we see how performance is lower across the board for different latent sizes with the full set of orientations compared to the single one.\nIf we are given a dataset of a single orientation, we can create a model for this single orientation, given a randomly oriented test image, we can optimize the rotation to find the orientation the model was trained on. In this toy example of using $90^{\\circ}$ rotations, we will test each of the 24 rotations, and take the rotation with lowest loss as the one the model was trained on. We can show this is equivalent to optimizing the ELBO, but I\u0026rsquo;ll leave that for later.\nDisentangled 3D Representations Sadly datasets aren\u0026rsquo;t always packaged up nicely in a single orientation, so we\u0026rsquo;d like a model that can learn from random orientations, and still nicely generalize by only learning a single one, and optimizing over the rotation. We\u0026rsquo;ll try a basic method to do this, without any justification why it might work. Before each backward pass of SGD, we\u0026rsquo;ll optimize the orientation, and hope this encourages the model to only learn a subset of rotations.\nThe image below shows some examples of the randomly oriented images fed to the VAE on the left, and on the right the rotation the VAE learned.\nAnd here is a graph of the MSE, with and without this orientation optimization. The loss looks similar to the loss in the above graph, where the model was trained without any augmentation.\nThis isn\u0026rsquo;t much of a proof of anything, so next week I\u0026rsquo;ll aim to get a couple metrics on this, as well as trying some more general transforms.\n Iteration I have spent too many times either philosophizing about a problem and not actually producing anything, or grinding away at a problem for too long without stopping to re-evaluate if that is really what I should be working on. The key is balancing both these things, by spending time narrowly focused trying to finish, but consistently reflecting on results and what matters.\nI also find it helps to have a more clear distinction between doing something, and deciding what to do (or reflecting on a result to decide what to do next). Iteration helps with this, separating work into hypothesis and experiment.\nInterestingly I also talked to a friend who is working on a startup, and he made this lesson more clear to me. He was improving his startup faster by getting more frequent feedback, rather than only focusing on the product. It\u0026rsquo;s much more effective to get real world feedback about your idea than to spend time theorizing about how it will work.\nI made iteration speed the main goal this term (along with increasing the feedback I get while iterating, which is why I\u0026rsquo;m writing this). I thought it was so important that I literally wrote \u0026ldquo;iterate\u0026rdquo; it on my wall. A little weird, but less weird than the \u0026ldquo;increase variance in outcomes\u0026rdquo; I had on my wall last year.\n","date":1583107200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583107200,"objectID":"f83e21a2382bffdbc1069180cf499c55","permalink":"https://renebidart.com/post/or5/2020-03-02-open-research-5/","publishdate":"2020-03-02T00:00:00Z","relpermalink":"/post/or5/2020-03-02-open-research-5/","section":"post","summary":"3D Disentangled Representations Last week I started my work on this by implementing a 3d VAE, and now it\u0026rsquo;s time to do something with it. The goal is to disentangle the orientation of an object from its shape, by optimizing over the orientation during training.","tags":null,"title":"Open Research 5: 3D Disentangled Representations and Iteration Speed","type":"post"},{"authors":null,"categories":null,"content":"Disentangled Representations, Bitter Lessons, and the Edge of Ability For a long time I\u0026rsquo;ve been obsessed with the idea of learning disentangled representations of the world. The general problem of learning disentangled representations is impossible without assumptions, just like how there is no classsifier to rule them all. Luckily just like we can construct useful classifiers by making some general assumptions about the structure of the world, we can make assumptions to learn disentangled representations.\nI previously worked on learning disentangled representations for rotations on 2d images, but I\u0026rsquo;m more interested in the general problem, creating 3d disentangled representations from a 2d image. This is much harder, but luckily there\u0026rsquo;s a nice intermediate problem, which is creating a disentangled representation using a 3d image. I\u0026rsquo;ll focus on this first, it should be a straightforward extension of the previous work.\nI started off creating a 3d VAE, which was surprisingly easy. Not much more that changing nn.Conv2d to nn.Conv2d, and it worked reasonably well. It can encode some objects from the modelnet dataset resobably well, so its time to start a prototype. I\u0026rsquo;ll aim to learn to disentangle the orientation of an object, so the model which is fed images at all orientations should learn to encode a single one, plus the orientation angle.\nThe Kaolin library is awesome for 3D data, but unfortunately it can require changing NVIDIA drivers, which is always surprisingly painful\nGenerality and the Bitter Lesson The real dream is unsupervised learning with less assumptions, where the unsupervised objective is determined only by performance on some downstream tasks. This would be learned self-supervised learning, but right now this is too difficult. Naively attacking this will have a double loop optimization problem - one to train an unsupervised objective, and another to train the supervised objective on top of it. Instead, I\u0026rsquo;ll make more assumptions and attack a particular problem.\nI always worry about working on a problem that will be killed by a more general approach, like in Richard Sutton\u0026rsquo;s bitter lesson. Learned features beat out hand designed features for image classification once there was enough compute, data and and some algorithmic advances. You don\u0026rsquo;t want to be the one working on better hand designed features in 2012. This is always what I\u0026rsquo;m trying to balance, being general enough that the result will scale, and specific enough that the problem is approachable now. More specific assumptions make it more likely to work, but less likely to scale up and create a paradigm shift in the field.\n Choosing the generality of an approach in deep learning is a specific case of a common choice we make, which is how ambitious we should be?\nWorking on something too easy or too hard are both signs of weakness. It is obvious with a problem that is too easy, because you have no chance of failing, but this is also true with problems that are too hard because there is no expectation of success. You have no fear of failing when working on time travel, and no chance of failing trying to get SOTA on a useless dataset with a pre-trained model.\nIt is easy to convince ourselves we aren\u0026rsquo;t as good as we really are, and work on something too easy, or be delusional and do something way too difficult, where we won\u0026rsquo;t be held accountable for the eventual failure. We have to be self-aware enough to know how good we are, and confident enough to work just at the edge of our ability.\n Abandoning Weight Sharing Also, this week I put the final nail in the coffin in a project that should have been finished long ago. I did a few more experiments to show weight sharing within convolution layers was not useful for image classification, unlike NLP where this was useful. I investigated both adding this weight sharing in standard CNNs (ResNet18, ResNet50), as well as in depthwise separable convolutions (Xception) to investigate if the result was better using the spatial or channel wise convolutions. I found it is much better in spatial convolutions, but because these have so few parameters, it doesn\u0026rsquo;t shrink the network in a significant way. The only case where this might be useful is in regularizing a neural network that is way larger than should be used for a given task, but if this is the case you\u0026rsquo;re better off using a smaller network directly.\n","date":1582416000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582416000,"objectID":"92efd624aeddd5d66531ee6bbde69f73","permalink":"https://renebidart.com/post/or4/2020-2-23-open-research-4/","publishdate":"2020-02-23T00:00:00Z","relpermalink":"/post/or4/2020-2-23-open-research-4/","section":"post","summary":"Disentangled Representations, Bitter Lessons, and the Edge of Ability For a long time I\u0026rsquo;ve been obsessed with the idea of learning disentangled representations of the world. The general problem of learning disentangled representations is impossible without assumptions, just like how there is no classsifier to rule them all.","tags":null,"title":"Open Research 4: Abandoning Weight Sharing, Bitter Lessons and Reasonable Ambition","type":"post"},{"authors":null,"categories":null,"content":"Distractions and Mistakes The emotional roller coaster of research continues. Previously I was working on a paper where the results were mediocre, but I thought there was something useful there. I wanted to finish some kind of paper, even if it would never make it to a top conference.\nAfter some wasted time because of Pytorch lighting and the differences between training on CIFAR10 vs. Imagenet, a few experiments convinced me to had found something good. I was getting unexpectedly good results, where it looked like I\u0026rsquo;d actually found a better way to prune networks. This quickly came crashing down when I realized a coding error had invalidated every promising result. Basically I missed a downsampling layer when implementing weight sharing, and this guaranteed results would look favorable for my method. All my good results were gone, as well as my pointless theorizing about why this was happening. What went wrong?\n Two sides of research There are two sides of research - trying to prove you’ve made something good, and trying prove it wrong. This is the scientific method. My issue was I was that I found it difficult to switch between these two modes, so I would do this too slowly. I had done multiple incorrect tests, and not noticed the mistakes until much later. It was carelessness, I knew I had to do test these things, this, but I put it off doing it for too long.\nIn general, iteration speed is key in research, and fast iteration speed means quickly generating and testing hypothesis. Effective testing is uncomfortable, because you must try to disprove your work. The key here is quickly switching between these ways of looking at it - I always wanted to work on it for weeks before attacking it in any way - but this can end in tons of wasted work. I had this tendency to not properly dig into things that are either difficult or might destroy my plan. An even better way is asking others to pick apart your ideas.\n","date":1581811200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581811200,"objectID":"4301b49bf08c4e238c81f98c97b8bcbb","permalink":"https://renebidart.com/post/or3/2020-2-16-open-research-3/","publishdate":"2020-02-16T00:00:00Z","relpermalink":"/post/or3/2020-2-16-open-research-3/","section":"post","summary":"Distractions and Mistakes The emotional roller coaster of research continues. Previously I was working on a paper where the results were mediocre, but I thought there was something useful there. I wanted to finish some kind of paper, even if it would never make it to a top conference.","tags":null,"title":"Open Research 3: Mistakes","type":"post"},{"authors":null,"categories":null,"content":"NLP I want to do self-supervised learning, and I think NLP is better suited to this, even though I\u0026rsquo;ve worked on vision previously. There is something special about NLP where simple self-supervised objectives like next word or masked work prediction work well, compared to computer vision where more complex methods are needed. If something works here, I can extend it to vision, and my guess is that the switch to NLP won\u0026rsquo;t be too difficult.\nFrameworks: Fastai, Ignite and Lightning. Iteration speed has been an issue for me. Too much planning and too slow execution. Slow execution was mainly from simple coding mistakes and being too messy. I only learned the absolute minimum of CS needed to get by, so my coding is at the far end of the research spectrum and my projects are often a dumpster fire after a few months.\nI want to use a library both for iteration speed, and hopefully to learn some good coding practices. I spent time setting up my approach so there would be quick iteration speed, and getting familiar with some NLP basics.\nFastai was the best course I\u0026rsquo;ve taken, and library was great for doing standard experiments quickly. Unfortunately I found it difficult to do non-standard things with, and code becomes a mess as soon as you try to change anything. Something about the way it is written means to change things they didn’t explicitly intend to takes a lot of effort. I loved the good defaults and having less to worry about when running experiments, but it not ideal for weird research. Luckily there were a couple more I\u0026rsquo;d never tried before, ignite and lightning.\nIgnite is used by huggingface, which probably has the nicest ML code I\u0026rsquo;ve seen, but Lightning has more GitHub stars and more memes in their medium articles!\nI did the Huggingface transfer learning tutorial using a different dataset with both ignite to see which one I liked better. It was written using ignite, which should have made it easy, but I didn\u0026rsquo;t like the experience. I didn’t find it intuitive. I couldn\u0026rsquo;t quite figure out why, or if I should take the effort to get used to this, so I moved on to Lightning.\nLightning was more intuitive, but filled with bugs. Even a basic task like mine ran into multiple problems with logging, and lack of documentation. It was annoying because it seemed perfect on the surface. It’s clearly a work in progress but I like the direction, so I’ll stick with it until it becomes limiting.\nI also realized how good huggingface was. Their transfer learning tutorial was amazing, and their code is so clear and concise compared to most I\u0026rsquo;ve seen. This makes a big difference in getting up to speed with NLP.\n Meta: How to have a bad career? I saw David Patterson\u0026rsquo;s talk How to Have a Bad Career, which feels like a more practical and modern version of You and Your Research. I\u0026rsquo;ll make sure to revisit this one.\nThere\u0026rsquo;s tons of practical advice on making presentations, giving talks, etc, but there were two big things that stood out for me:\nSpend as much time polishing and presenting the research as you did on the original research If people don\u0026rsquo;t know about your work, or don\u0026rsquo;t understand it, its the same as not having done it. This is totally contrary to the way I used to work, where I would spend the absolute minimum time possible on presentation. To me this was bullshit, I\u0026rsquo;m not a used car salesman, so my work will speak for itself. But I was wrong, and its time to treat presentation as a central part of my work.\nFrequent feedback is key Just like in reinforcement learning, delayed rewards are a huge issue with research. The best way to improve research is an another perspective, from someone who will be critical with your work. Even better to occasionally get feedback from people even further from your topic for a wider perspective.\n","date":1581206400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581206400,"objectID":"d12457daae363fa888f2e8ab1923f2ac","permalink":"https://renebidart.com/post/or2/2020-2-9-open-research-2/","publishdate":"2020-02-09T00:00:00Z","relpermalink":"/post/or2/2020-2-9-open-research-2/","section":"post","summary":"NLP I want to do self-supervised learning, and I think NLP is better suited to this, even though I\u0026rsquo;ve worked on vision previously. There is something special about NLP where simple self-supervised objectives like next word or masked work prediction work well, compared to computer vision where more complex methods are needed.","tags":null,"title":"Open Research 2: Getting Started - Self-supervised Learning Basics, Pytorch Ignite, Lightning and Fastai","type":"post"},{"authors":null,"categories":null,"content":"What to work on? I spent the fall doing an internship at a hedge fund (Shell Street Labs) in Hong Kong, which was a great break from this open ended research. But what will I work on now?\nWhat is the most important problem in machine learning right now? I\u0026rsquo;m excited for what\u0026rsquo;s going to happen in a bunch of fields, like self-supervised learning, time series, 3D modelling, pose estimation, and a more general form of Neural Architecture Search. But which one is right to work on? Excitement alone isn\u0026rsquo;t enough, it better be something I\u0026rsquo;m able to solve. Here are a few of the topics I\u0026rsquo;m most interested in:\nTime Series This internship introduced me the world of time series data, and the significant limitations we have in the field. Time shouldn\u0026rsquo;t be treated the same as another x or y direction. The structure of a problem changes over time and the model needs to know about this, kind of like the state in a hidden markov model. It isn\u0026rsquo;t the same as a language model, the world really is a different place in 2008 than 2020, and we need a learned way to incorporate this into our models.\nWe also don\u0026rsquo;t know how what the correct inductive bias is for these type of models. With infinite data transformers are the best approach, because they will change from the bag of words style model to whatever is the correct way to handle time series during training. On the other hand RNNs start out with a better inductive bias, but lack flexibility. How do we trade this off for different sized datasets? Also, how to handle multiple simultaneous series in a way that extends to hundreds/thousands efficiently? These are more open ended questions, but I\u0026rsquo;m surprised there isn\u0026rsquo;t more research on this topic.\nDisentangled Representations I\u0026rsquo;ve worked a on creating disentangled representations for 2D rotations before, but I wasn\u0026rsquo;t sure how to extend the work to 3D. With the release of better libraries like Kaolin, it might be the right time to do this, creating generative models which explicitly represent (lighting, pose, etc.) parameters, even without any labeled training data. We would create a VAE which takes as input the image of an object, but reconstructs the object using the differentiable 3D rendering, with the loss as the projection of this object back to an image. We would optimize pose parameters (rotation, lighting, etc.) for each example during training and pray it is able to learn a disentangled representation like what happened in the 2d case.\nSelf-Supervised What I\u0026rsquo;ve thought about the most over the past few months is self-supervised learning. Self-supervised learning was a cornerstone of NLP for the last couple years and Yann LeCunn is finally getting his unsupervised learning revolution in computer vision too. What I\u0026rsquo;m most interested in is how we do self supervised learning, and how it is connected to our brain rewarding us with dopamine? Is this our own self-supervised learning, and could this be incorporated into a deep learning algorithm? The dream would be learning self-supervised objectives, but how can we do this in an efficient way?\nAn objective can be represented as a neural network, but naively training this is a double loop optimization, where optimizing the self-supervised objective takes a full unsupervised training of the self-supervised and supervised problems, before optimizing the self-supervised objective with some gradient free method. Or maybe there is some more efficient approach by taking the derivative through the training process to update the objective?\n Meta: Why Writing? I watched You and Your Research by Richard Hamming last week, and it was the best talk I\u0026rsquo;ve heard on . It reinforced my view that its extremely important to pick the right problem, and that so many people don\u0026rsquo;t succeed because they miss this crucial step, and focus on unimportant but familiar problems:\n \u0026ldquo;The average scientist, so far as I can make out, spends almost all his time working on problems which he believes will not be important and he also doesn\u0026rsquo;t believe that they will lead to important problems.\u0026rdquo;\n Without both picking the right problem, and working very hard, you will not succeed. He also had a comment about how the people who discussed ideas with others were most likely to work on the most important problems:\n But I can say there is a pretty good correlation between those who work with the doors open and those who ultimately do important things, although people who work with doors closed often work harder.\n The modern equivalent of the open door is spreading your ideas online. In a way it is even more extreme than the open door policy, because you\u0026rsquo;re open to criticism and input from anyone. It forces you to continually iterate on your ideas until they are good. Like being in a panopticon, this is an uncomfortable thing, but it seems like the right thing to do. There are some more modern takes on why you should write, but this open door is reason enough for me.\nI\u0026rsquo;ll aim to keep an open door by writing about research once per week.\n","date":1579996800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579996800,"objectID":"a3f0cd657ebd751dd53a461eec62eb0d","permalink":"https://renebidart.com/post/or1-decisions/2020-1-26-open-research-decisions/","publishdate":"2020-01-26T00:00:00Z","relpermalink":"/post/or1-decisions/2020-1-26-open-research-decisions/","section":"post","summary":"What to work on? I spent the fall doing an internship at a hedge fund (Shell Street Labs) in Hong Kong, which was a great break from this open ended research.","tags":null,"title":"Open Research 1: Decisions","type":"post"},{"authors":null,"categories":null,"content":"My Deep Learning PhD Journey (so far) 2016-2017 Pre-PhD After messing around with some MMA fight prediction in my undergrad I became interested in machine learning, and decided the best route was to take a masters in statistics. I went to my Waterloo after not being able to defer my acceptance to UofT, and being scared of paying rent in Toronto. I had never visited Waterloo, or had much of a clue what a masters degree or research might entail, only the dream of doing machine learning research.\nTo my horror the focus of the master\u0026rsquo;s degree was not research, but taking classes and learning statistics! Nonetheless I neglected my classes enough that it may as well have been. My first research question was how does optimization behave with fewer parameters like in pruning? I had found networks will still occasionally get good accuracy when trained with few parameters, but mostly fail. I have no idea why I was interested in this, but quickly abandoned it thinking it was a waste of time, and went to search for a real research project.\nI was lucky enough to find a great adviser for my research paper, Ali Ghodsi. He introduced me to people working at Sunnybrook Hospital, and I couldn\u0026rsquo;t be more excited. Not only had I found a supervisor who would let me do machine learning, but he was helping me work on a topic I couldn\u0026rsquo;t have been more excited about. I had met people with preventable misdiagnosis before, and obviously deep learning would be the silver bullet to fix this. We worked on histopathology grading, and managed to get some decent results, even giving a presentation at SPIE medical imaging. Research was a grind, with me wasting time because of weak coding skills, but I was hooked. I was convinced I was on the right path, and decided I needed to pursue this, and the best way was with a PhD.\nAlthough my supervisor was supportive, and research was going reasonably well, it felt wrong to be in the statistics department, where proofs mattered more than results. Also, statistics was one of the more strict PhD programs, with more mandatory exams, more course requirements, and more teaching assistant work. I felt like I shouldn\u0026rsquo;t be there, so I walked over to the ugly part of campus and asked if I could become an engineer. They were open to another academic change, and I joined a PhD in engineering not knowing what Matlab or a fourier transform was.\n2018 Winter-Summer: Starting PhD My supervisor would be Alexander Wong, who was experienced in machine learning, the algorithmic and hardware side of medical imaging, and even a medical startup. This was clearly the right choice, no matter what direction medical imaging went, we would either come up with either solid research, or make something useful. Now to find another project!\nI wandered around the field, messing around with a few problems, but for the imaging problems in particular, I kept coming back to the same issue. It seemed the technology was already good enough to solve these problems, it was a question of getting enough data and designing a good interface with doctors to make it practically useful. My goal was deep learning research, so I assumed I wasn’t the guy for this task. Of course I didn\u0026rsquo;t immediately switch directions, I spent a month or two not wanting to admit this to my supervisor.\nWith hindsight, there were many ways to make this work, there were plenty of unexplored problems in interpretability, multimodal and data efficient ML, but I didn\u0026rsquo;t feel confident to tackle the issue of interfacing with doctors, so I gave up. I wanted to tackle the most important problem, and here I thought it was interface/system design\n2018 Fall: Medical Imaging to Adversarial Examples I decided to look for a research topic in “pure” machine learning, to avoid the situation where data and interface design would be the secret sauce like what I found in healthcare. What was the most important problem to work on?\nAn obvious one was adversarial examples - imperceptible perturbations that could destroy our best deep learning models. The current best approach, adversarial training, was also the most simple one. I wasn’t going to tackle this, smarter people with more GPUs were already grinding away at it. I\u0026rsquo;d need to do something a little weirder to succeed. My failed experiments with denoising autoencoders reinforced this, so instead I’d use something else for inspiration - our visual system.\nMultiple objects can\u0026rsquo;t exist in the same location, so we shouldn’t have all features active at every location. Maybe sparse activations are the key to adversarial defence? Were adversarial examples somehow sneaking in to activate other feature maps that shouldn’t be active at all?\nI tried an explicit constraint on this, only allowing top x percent of activations to be active in a given spatial location. Instead of using a scalar non-linearity, this was vector to vector. It didn’t help the problem of adversarial examples much, but I noticed you could still train networks with this activation, even removing most ReLUs. I had no idea if this could lead anywhere, so abandoned it. Later I ran into people from Numenta at ICML 2019 who had proved that sparse representations are useful.\nAnother idea was that our brain uses concepts, while CNNs only extract discriminative features, with no model of what is being seen. I was a cool paper using VAEs in this way , but there wasn\u0026rsquo;t a clear approach forward without really good generative models. I had an idea the way forward was to adding a hierarchy into the VAE but the initial experiments were failing, and again I felt I was wandering in the dark.\n2019 Winter: Adversarial Examples -\u0026gt; VAE / Disentangled Representations I decided to focus less on adversarial defence, and more on making intuitively appealing models, because it seemed like the issues with CNNs were deep enough that we may need an entirely new approach.\nNeural Nets don\u0026rsquo;t understand rotations, so for a CNN to generalize to rotated images, we normally make it learn the same image at multiple rotations. This seems wrong, and there had been previous work on the topic like spatial transformer nets, which make a single guess at the correct rotation of the image, or group equivariant CNNs which explicitly generalize correctly to rotations, but in a way that was unlikely to scale to more complex transforms. I liked the idea that the network would learn some abstract representation, and then perform some \u0026ldquo;mental rotation\u0026rdquo; on it, like what was discussed by Goeff Hinton in \u0026ldquo;What is wrong with convolutional neural nets ?\u0026quot; This isn\u0026rsquo;t exactly the point of his talk, but I liked the idea of a network that would perform this mental rotation, but not using the one-shot method of spatial transformer nets.\nI tried doing this with a VAE on MNIST, where during training there is an inner optimization loop to optimize the rotation the image was encoded at. This meant the model was continually learning the best rotation to encode each image at, and because of limited model size the model learned to encode all digits of the same class in the same orientation, leading to a disentangled representation of rotation and object.\nThis worked reasonably well for MNIST, but how can it be extended to more complex images? 2D rotations aren\u0026rsquo;t so useful in the real world.\n2019 Winter/Spring: Comprehensive Exam It came time for my comprehensive exam, so I needed an important topic I could work on for a couple years, which would become my thesis. The last project on the AVAE wasn\u0026rsquo;t going to work because I had no idea how to extend it, so yet again I went looking for a project to commit to.\nEven though there was hype around using algorithms to design neural networks, with NAS, the biggest performance improvements in terms of efficiency and accuracy have come from hand designed components, like convolution, separable convolution, and self-attention. Current NAS methods have not quite lived up to the hype, and have mostly been limited to rearranging existing components of networks, not creating entirely new layers. These assumptions were necessary because current NAS methods are far too inefficient do lower-level search for better architectures. The eventual goal of NAS is to search for an architecture without making any assumptions about its structure, evolving a fully connected one into something better. The problem is we have no way to approach something this difficult. How can we simplify this?\nA lot of different layers can be seen as adding sparsity or weight sharing on standard convolution layers. More generally, they are sparsity and weight sharing on self-attention layers. So what if we assume convolution, and find the optimal form of weight sharing and sparsity within this? Maybe this would be tractable?\nBecause of the need to pass my comprehensive I ended up looking into methods for sparsification and quantization, to come up with a computationally feasible approach to this. Also, for some experiments I directly extended some forms of weight sharing as seen in dynamic convolutions to vision problems by forcing multiple convolution filters to share weights, which is better than removing filters directly, but not particularly impressive.\nLooking back, I started with the goal of a general NAS algorithm, and ended adding hard-coded weight sharing in convolutions. The need to get actual results changed my problem from something exciting to something I have no particular interest in. The topic is still important, but I\u0026rsquo;m not sure at this moment I have the right approach for this more general problem.\n Meta: Exploration-Exploitation Trade Off It is exciting to have the freedom to choose research projects, but there\u0026rsquo;s a lot of pressure. Choosing the wrong topic means months of wasted effort. If you don\u0026rsquo;t do good research you don\u0026rsquo;t get rewarded, unless you\u0026rsquo;re in love with the idea of being a \u0026ldquo;Dr.\u0026quot;, or are doing doing a PhD for immigration purposes.\nThe issue is the exploration-exploitation trade-off. Do we give up on something, because it doesn\u0026rsquo;t look like a good research direction, or follow through with it because starting over again is so risky? We both need to pick the right topic, and work on it for a long time to do anything great.\nIt is hard to implement a simple strategy like epsilon-greedy when the rewards are delayed. I don\u0026rsquo;t have a good intuition if a project is going well, even a month into it. My guess is so far execution has been the limiting factor for me. At the same time I\u0026rsquo;m conflicted, I don\u0026rsquo;t want to produce low quality research for the hell of it, but by abandoning projects halfway through I\u0026rsquo;ve guaranteed that\u0026rsquo;s all I\u0026rsquo;d do.\n","date":1579910400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579910400,"objectID":"4ae55dc40085774b9ffd562e0fa834ac","permalink":"https://renebidart.com/post/or-past/2020-1-25-open-research-past/","publishdate":"2020-01-25T00:00:00Z","relpermalink":"/post/or-past/2020-1-25-open-research-past/","section":"post","summary":"My Deep Learning PhD Journey (so far) 2016-2017 Pre-PhD After messing around with some MMA fight prediction in my undergrad I became interested in machine learning, and decided the best route was to take a masters in statistics.","tags":null,"title":"Open Research 0: Past","type":"post"},{"authors":null,"categories":null,"content":"Limitations of Variational Autoencoders Deep learning models are powerful, but don’t always generalize well to out of distribution samples. For example, people have no problem understanding slightly rotated digits:\n        Rotated MNIST    But Variational Autoencoders (VAE) do not generalize to this change in distribution this well. Look at how the encoding performance decreases as the image is rotated:\n        Images after being encoded by VAE after various rotations. Performance decreases with increased rotation.    In a little more detail, look at the loss when MNIST digits are encoded at different rotations:\n        VAE\u0026rsquo;s loss on various rotation.    In the training dataset all numbers are oriented at $$0^{\\circ}$$, and it seems this model performs worse as the digits stray further from this distribution. The loss reaches a peak and decreases, because some digits look identical when rotated $$180^{\\circ}$$.\nNormally to solve this problem, we use data augmentation, which is basically feeding a neural net images at all possible rotations, and brute forcing it to understand the full distribution. There are some other methods to approach this1, but data augmentation is by far the most commonly used, and other methods have other limitations.\nHow to solve this? Why is it that for a machine learning model to generalize to a rotated image, the most popular method is to feed it the same image at a bunch of different rotations? Blindly doing data augmentation increases the model complexity required, because we must learn all these representations at different orientations. We would prefer this to learn a representation with only a single rotation parameter, but it is hard for a standard CNN to learn this. Why is it that we can understand rotated images, but its so hard for neural nets to generalize in this way?\nNeural nets don\u0026rsquo;t have a built in way to understand rotated images like people do, so they fail to generalize the way human vision does. But what if the model would learn some abstract representation, and then perform some \u0026ldquo;mental rotation\u0026rdquo;, something like what was discussed by Goeff Hinton in \u0026ldquo;What is wrong with convolutional neural nets ?\u0026quot;1\nOne popular approach, the Spatial Transformer Network attempts to solve this problem by applying a learned affine transform to return the image to its original orientation. As long as the network figures out the correct transform, this is a great solution! Unfortunately if the model is wrong initially, there is no way to go back and improve on the transform used:\n        The STN is not guaranteed to get the optimal transformation    We would like to transform the image closer and closer to some \u0026ldquo;cannonical\u0026rdquo; orientation, based on how \u0026ldquo;weird\u0026rdquo; the image looks to us. But in classification, there is no good metric to measure how weird an image is. The best we can do is something like the classification difficulty/entropy of softmax output.\nBut when we have a VAE, there\u0026rsquo;s a clear metric for how \u0026ldquo;weird\u0026rdquo; an image is, the loss! This loss is shown as: \\begin{equation} -L_{VAE} = E_{z\\sim q_\\phi}[logp_\\rho(x|z)] - KL(q_\\phi(z|x) || p_\\rho(z))] \\end{equation}\nWe can add an affine transform layer before and after the vae, applying a rotation to the input image, and the inverse rotation to the output. Then, for any image, we can find the rotation that will minimize this loss. It turns out that in the VAE this is actually equivalent to maximizing a lower bound on the likelihood of the data (the ELBO), so this procedure is actually moving the given image towards the training distribution, which is exactly what we\u0026rsquo;d like.\n        Affine Variational Autoencoder (AVAE). VAE with affine transforms added before and after the network.    In this form the whole network is nice and differentiable. So given an image, we can optimize $$\\theta$$ using SDG, the same way we optimize the parameters of the network! In practice, there\u0026rsquo;s some local minima, so some random restarts is required.\nAnd using this, we easily generalize to rotations, and have traded off using an increased model complexity for using increased compute. In fact, this can easily be extended past rotations, and be used for more general affine transforms.\n        Performance of VAE compared to AVAE on rotated MNIST    The AVAE gives a clear improvement in performance. Also, because we are only forcing the model to learn images at one orientation, the AVAE can be a smaller model compared to a VAE forced to learn the full distribution using data augmentation.\nNote that this requires all images to be given to the model in some cannonical orientation at training time to achieve the full benefit of having a small model and generalizing well. This isn\u0026rsquo;t good! Most datasets aren\u0026rsquo;t made like this, and people don\u0026rsquo;t have this restriction when learning. How can we get around this and learn both a minimal representation on a subset of the data distribution during training, but also generalize to the full distribution at test time?\nAn option is to optimize the transform parameters $$\\theta$$ during the training process, where $$\\theta$$ is optimized before SGD is done for each batch of images. The intuition is that because it is optimal for the model to only learn to encode at a subset of the rotations / single rotation, as training happens the model will gradually start to learn to encode at some rotations better than others, and eventually the model will only be training on a single rotation. It turns out that this works, and this process creates a better performing model without any forced increase in model capacity:\n        Comparing AVAE performance using the dataset at a single cannonical orientation, at random rotations, and at random rotations using the optimization process during training. This training optimization process achieves lowest loss.    It worked! The loss of this model is lower for all rotations. And to make sure it worked, we can look at the distribution of rotations of the images during the training process:\n        Distribution of rotations for digit \u0026ldquo;1\u0026rdquo; during training. As training progress, the model learns to encode at specific orientations.    We see that the model started off with random rotations, but gradually learned it was better to encode them all at a similar rotation. Because this was for 1, and is almost the same when rotated $$180^{\\circ}$$, there are two peaks $$180^{\\circ}$$ apart.\n        Comparing distribution of rotations for digits \u0026ldquo;6\u0026rdquo; and \u0026ldquo;9\u0026rdquo; during training. As training progress, the model learns to encode at specific orientations.    We can also compare 6 and 9. The model learned to encode these at $$180^{\\circ}$$ at degree rotations apart, because these digits are almost the same after being rotated this amount, and so this is the most efficient way to represent them.\nDiscussion We\u0026rsquo;ve got an VAE that generalizes to rotation using computation instead of increasing model size! Unfortunately it does take a lot of computation. Inference takes about 50x as long as the standard VAE. This is totally unoptimized, and it would be quite quicker to use an STN inside the optimization process, with only a few random restarts.\n 1 Note: This isn\u0026rsquo;t really what he is talking about here, capsules are a much more general concept. I\u0026rsquo;m just stealing the idea of transforming the image to some \u0026ldquo;useful\u0026rdquo; frame ↩ Code available at https://github.com/renebidart/avae\n","date":1556755200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556755200,"objectID":"c78c3ca4ef7aa0a442518e051c6c32e6","permalink":"https://renebidart.com/post/2019-5-2-avae/2019-5-2-affine-variational-autoencoders-for-efficient-generalization/","publishdate":"2019-05-02T00:00:00Z","relpermalink":"/post/2019-5-2-avae/2019-5-2-affine-variational-autoencoders-for-efficient-generalization/","section":"post","summary":"Limitations of Variational Autoencoders Deep learning models are powerful, but don’t always generalize well to out of distribution samples. For example, people have no problem understanding slightly rotated digits:\n        Rotated MNIST    But Variational Autoencoders (VAE) do not generalize to this change in distribution this well.","tags":null,"title":"Affine Variational Autoencoders for Efficient Generalization","type":"post"},{"authors":null,"categories":null,"content":"Attention In the past the standard design of NLP models, was based on recurrent neural networks (RNN) to ensure the model can encode long range dependencies necessary in language modelling. This assumption was called into question with the development of the Transformer, a model where instead of RNNs, self-attention layers are used. The transformer is composed of an encoder and decoder stack of alternating pointwise fully-connected and self-attention layers:\n        :\u0026ndash;:   The Transformer. If this isn\u0026rsquo;t familiar check out the paper or this great blog    Since then self-attention has been useful in a variety of fields, including computer vision, achieving state of the art in adversarial defence on imagenet, as well as in the Self-Attention GAN.\nThe transformer model made us question the standard design of NLP models being focused on recurrent neural networks, but even more recently the idea that attention is the key for NLP has been questioned.\nLimitations of Attention The BERT paper showed us that attention isn\u0026rsquo;t all you need to achieve good results in NLP, because to achieve their state of the art results they leveraged bidirectional LSTMs in addition to the self attention used in the transformer. But later work has shown not only do we need more than attention, we may not need attention at all. First we can review some limitations of attention:\nQuadratic Complexity Attention has a quadratic complexity in input length, meaning attention doesn\u0026rsquo;t scale well over long distances.\n        From the Transformer paper    This is because for each position (there are n), we need to attend to every other position in the input (there are also n), for a total of d dimensions in each location, so in total there are $$n^2d$$ operations needed, where d is the dimension of the input.\nLimitations of Attention for Long Range Dependencies People had speculated that the reason attention was so useful was because it could more easily model long range dependencies in the input, but a recent paper has shown this to be incorrect.\nBy looking at the performance of CNN, RNN and the transformer on on subject-verb agreement task as the distance between the subject and verb is increased, they showed that self-attention\u0026rsquo;s performance degrades faster than CNNs or RNNs. To overcome this limitation in performance for long range dependencies, many self attention heads are needed.\n        *Accuracy on subject-verb agreement task. Attention is worse than CNNs and RNNs! From   A Targeted Evaluation of Neural Machine Translation Architectures*    The Alternative: Lightweight, Dynamic Convolutions In Pay Less Attention with Lightweight and Dynamic Convolutions, they propose an alternative to self in the form of a two modified convolution layers:\n Lightweight Convolutions - Depthwise separable convolutions with weight sharing Dynamic Convolutions - An extension of lightweight convolutions with dynamic weights  Lightweight Convolutions Lightweight convolutions leverage an innovation that is commonly used in vision to create more efficient architectures, known as Depthwise Convolutions.\nDepthwise Convolutions take one channel as input for each convolution, in contrast to the standard convolution, which takes all channels as input . Only taking a subset of channels as input massively reduces the number of parameters, and as was seen in the vision literature still provides good performance.\n        As shown in MobileNet, depthwise convolutions apply a single filter for each channel.    Weight Sharing across channels is also added to the depthwise convolution to further reduce the number of parameters. They use the same weights across multiple channels, for a total of H independent weights. In the paper they used a value of $$H=16$$, so instead of learning 1024 different filters, only 16 are learned, in the case that there are 1024 channels.\nUsing the Depthwise convolution reduces the parameters required from $$d^2k$$ to $$dk$$, where d is the number of channels, and k is filter width. The addition of weight sharing further reduces the number from $$dk$$ to $$Hk$$.\n        Comparison of self attention, Lightweight convolution and dynamic convolution from Pay Less Attention with Lightweight and Dynamic Convolutions    Dynamic Convolutions Dynamic convolutions are an extension of lightweight convolutions, where at each time step a different convolution kernel is created using a linear function. The weights depend only on the current location, not using global context. As indicated below, the dynamic convolution is crucial to get state-of-the-art performance without using self-attention.\nResults They compared the lightweight and dynamic convolutions to the Transformer Big model. For the convolution models, they swapped out the self attention layers with convolution, and increased the blocks increased to 7 in order to keep the number of parameters in both models consistent. Kernel sizes are increased in the deeper blocks, with kernel sizes of of 3, 7, 15 and 31x4, and $$H=16$$ for all blocks.\nLightweight convolutions are competitive with the best methods despite their simplicity, and dynamic Convolutions get state of the art on English-German translation. This shows that self-attention isn\u0026rsquo;t necessary, and can be replaced with simpler and less computationally expensive convolutions\nIn addition, this paper did a great ablation study to see exactly where the benefits of this model come from. They showed:\n Wide convolution kernels are necessary to replace self attention Weight sharing ($$H=1024$$ to $$H=16$$) doesn’t hurt performance Self-attention works even with limited context size Dynamic convolution helps, but softmax normalization is needed for convergence          Proper scientific method    Thoughts   It seems an important result here is wider context is important at higher layers, but not important at lower ones. Their dynamic convolution is somewhat similar to self attention, and both still perform well with the limited context size, so long as the context progressively increases.\n  Current SOTA for adversarial images on imagenet uses self-attention layers. Is is possible that these could be replaced using wider, or possibly dynamic convolutions at higher layers?\n  ","date":1556236800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556236800,"objectID":"d5f29291a96005f508b101181eb65e1a","permalink":"https://renebidart.com/post/2019-04-26-attention/2019-04-26-attention-is-overrated/","publishdate":"2019-04-26T00:00:00Z","relpermalink":"/post/2019-04-26-attention/2019-04-26-attention-is-overrated/","section":"post","summary":"Attention In the past the standard design of NLP models, was based on recurrent neural networks (RNN) to ensure the model can encode long range dependencies necessary in language modelling. This assumption was called into question with the development of the Transformer, a model where instead of RNNs, self-attention layers are used.","tags":null,"title":"Attention is Overrated","type":"post"},{"authors":null,"categories":null,"content":"Overview 2D pose estimation has improved immensely over the past few years, partly because of wealth of data stemming from the ease of annotating any RGB video. 3D pose annotation is much more difficult because accurate 3D pose annotation requires using motion capture in indoor artificial settings.\n        Mocap requires artificial settings and unnatural clothing, as shown in the Max Plank lab    Ground truth vicon datasets can be augmented with synthesized poses using different body shapes, background, etc. but still are limited by the original collected data. Alternatively, synthetic datasets can be used to increase variety. In addition, some use RGB cameras and auxiliary measurement to estimate 3D poses in the wild.\nSome promising datasets are 3D Poses in the Wild for in the wild poses, JTA if for simulated data, and Human3.6m and Total Capture for controlled environments with ground truth labels.\nGround Truth Datasets These datasets include ground truth, including full 3d skeleton using mocap, which has negligible measurement error. The limitation is mocap tends to only work in controlled environments, so models trained on these datasets may struggle to generalize.\nAlternatively, synthetic data can be generated either based on human data, as in SURREAL, or entirely synthetically using a game engine as in JTA. Both allow for good quality of annotations, but are limited because of the computer rendered graphics rather than true natural images.\nHuman3.6m: Large scale datasets and predictive methods for 3d human sensing in natural environments (2014) This is the standard in 3d pose estimation. A dataset of 11 people doing 17 common poses in an indoor environment, resulting in a total of 3.6 million frames. The following measurements are included:\n RGB views: 4 standard ones, one with depth Exact 3D joint positions from mocap Pixel-level body part labels for a subset of the data 3D laser scans of the actors (done once, not throughout the videos)  This dataset mostly includes everyday poses, not anything sports specific. natural scenarios, but no specific sports, etc.\nThey include some mixed reality augmentation for the dataset as well. Details can be found in Human3.6m: Large scale datasets and predictive methods for 3d human sensing in natural environments\n        Example poses from Human3.6m    HumanEva (2009) Similar to the 3.6m dataset, but more limited. It is actually composed of two datasets, HumanEva I \u0026amp; HumanEva II, both in controlled indoor environments.\nThe HumanEva I dataset consists of:\n RGB views: 3 standard ones 60 Hz 3D joint positions from mocap  HumanEva II is similar, but with the addition of another camera, as well as multi action scenarios including running around a loop performing actions.\nThese datasets have more natural clothes, but this comes with the cost of moving sensors, and less accurate mocap data. Details can be found in HumanEva\n        Examples from HumanEva II    Total Capture: 3D Human Pose Estimation Fusing Video and Inertial Sensors The Total Capture dataset contains indoor multi-view video, IMU, and vicon mocap with ∼1.9M frames. Very constrained environment.\nThis dataset is useful to compare 3d pose estimating using IMU and multiview cameras to ground truth using mocap, but again is quite limited by being in a controlled environment.\n        Different data types contained in Total Capture    Learning from Synthetic Humans (2017) SURREAL (Synthetic hUmans foR REAL tasks) dataset contains synthetically generated data rendered from 3D sequences of motion capture data. The original data is from Human3.6M.\nThe idea is that you can randomly sample the person\u0026rsquo;s pose, appearance, lighting, camera position and background, creating a massive dataset from only a few annotated models. The SMPL model is used to decompose the body into pose and shape parameters, so we can sample these independently to produce an image. To generate realistic shapes, they use the CAESAR dataset to train SMPL, and then randomly select a participant and perturb the shape components slightly.\nOnce the person is generated from the random shape and pose parameters, sample camera, texture, light and background to get the full scene. Details can be found in Learning from Synthetic Humans\n        Surreal pipeline for generating data    JTA Dataset (2018)         Surreal pipeline for generating data    Massive simulated dataset created from Grand Theft Auto V. Consists of about 500 000 frames with almost 10 million body poses labeled with full 3D annotation.\nDetails can be found in Learning to Detect and Track Visible and Occluded Body Joints in a Virtual World\nIn the wild Instead of using ground truth mocap annotations, annotations are estimated in order to get a wider variety of actions in the wild instead of being constrained to indoor setting with mocap. Ground truth can be estimated using auxiliary measurements such as:\n Inertial measurement units Multiview cameras RGBD cameras  3D Poses in the Wild Dataset 60 in the wild videos with 2D and 3D pose annotation, including camera pose and scanned models with different clothing variations. The poses are estimated using IMUs and a handheld 2d video. This is the only promising 3d pose in the wild dataset.\n        Actual in the wild images with 3d poses    On TotalCapture dataset this gets 26mm error, and outperforms their method without using multiview. This is a best case scenario for accuracy because it was in a controlled environment, so we should expect this dataset to have error \u0026gt;26mm. Nevertheless, this could be very useful for situations where absolute accuracy isn\u0026rsquo;t crucial, and we want to generalize to the wild. More details on their paper.\nMonocular 3D Human Pose Estimation In The Wild Using Improved CNN Supervision (2016) Using multi-camera markerless system, recording 3D pose in green screen to change background. 8 actors, 8 cameras, \u0026gt;1.3M frames. This is still indoor in a relatively controlled environment, so it isn\u0026rsquo;t truly in the wild, and there may be some uncertainty with how accurate their ground truth is. More info in their paper\nUnite the People: Closing the Loop Between 3D and 2D Human Representations (2017) In Unite the People they use RGB to 3D estimation based on CNN, with some manual removal of bad results, and no uncertainty estimate. They tested their model on model on Human3.6m, getting 80mm average error. This is probably best case error, so this isn\u0026rsquo;t useful for most applications.\n","date":1543881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543881600,"objectID":"9926bd7098df3c23bd5a94a8be1c3f90","permalink":"https://renebidart.com/post/2018-12-04-pose-datasets/2018-12-04-3d-pose-estimation-datasets/","publishdate":"2018-12-04T00:00:00Z","relpermalink":"/post/2018-12-04-pose-datasets/2018-12-04-3d-pose-estimation-datasets/","section":"post","summary":"Overview 2D pose estimation has improved immensely over the past few years, partly because of wealth of data stemming from the ease of annotating any RGB video. 3D pose annotation is much more difficult because accurate 3D pose annotation requires using motion capture in indoor artificial settings.","tags":null,"title":"3D Pose Estimation Datasets","type":"post"},{"authors":null,"categories":null,"content":"Basic Set Up To do any deep learning, you\u0026rsquo;ll either need to have set up a VM at a cloud provider (AWS, Azure or paperspace, google, etc.), unless you happen to have a gpu lying around. Most commonly these will be using a linux distribution like Ubuntu 16.04\nIf you aren\u0026rsquo;t familiar with linux, do a basic tutorial. After sshing to the machine, we will set it up:\nThere are a few things that must be installed everywhere:\n CUDA - GPU software Tmux - Preventing ssh connection from detaching with long running jobs SSH alias - connecting quickly  1. CUDA If CUDA isn\u0026rsquo;t already installed, follow the instructions shown in this gist. This is probably the best way to set this stuff up. Make sure you\u0026rsquo;re installing the latest version, which you can check on the [Nvidia Website] (https://www.geforce.com/drivers)\nHere is an example script to set up for the Fast Ai course. This is an easy way to get everything installed, but may include a bunch of unnecessary things.\n2. Tmux Tmux is used to prevent jobs from stopping when your connection to the remote machine is closed, as well as making your screen look cooler. This should be installed using:\nsudo apt-get install tmux          :\u0026ndash;:   Without Tmux            With Tmux    Tmux has a strange default configuration, and is difficult to use. You can make tmux much more user friendly, and can even use a mouse mode by using this configuration.\ngit clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local .  Each time a you want to run code, start a tmux session using\ntmux  When you log back on to the remote computer, reconnect to tmux using:\ntmux a  More details are here\nNote: An alternative is screen. Don\u0026rsquo;t use this, tmux is better.\n3. SSH alias There are many cases where a lot of typing can be saved by adding aliases the .bashrc file. For example, normally you will connect by using ssh:\nssh username@123.45.678.90  This is hard to remember, and will be annoying to copy paste every time. It would be easier to remember something like ssh-aws, which can be done by adding an alias.\nIf you\u0026rsquo;re working on a mac or linux you can make a shortcut instead by adding it to the .bashrc file. If it does not exist create it in your home directory.\nAdd this line:\nalias ssh-aws='ssh -Y username@123.45.678.90'  Editing Code / Running Experiments Editing code remotely isn\u0026rsquo;t as straightforward as doing it locally. There are a few commonly used options:\n1. VIM  Edit code directly on the remote computer. This is the most commonly recommended approach, but it has a steep learning curve and will take some effort to become proficient.  2. SSHFS for mac  This allows you to mount the remote directly locally, so you can edit the code like any other code on your machine Can use any text editor or IDE Install following the instructions Add an alias to the local .bashrc as:  alias sshfs-aws='umount /Users/.../local_sshfs_folder; sshfs username@123.45.678.90:/username/code /Users/.../local_sshfs_folder'  3. IDEs  Some IDEs directly integrate this functionality The paid version of Pycharm has a remote sync option.  4. SCP  It is possible to edit files locally and then scp them to the server, but this is a bad idea. Don\u0026rsquo;t do this.  Organiation         Example Directory Structure     To make it easier to mount the directory remotely, I keep the code for all projects together, and have the datasets in a seperate location. Each project has its own git repo. Each dataset has its own models stored together, with an explicit test/train/val split There is no correct way to do this, and the organization really depends on the complexity of the project. Look at cookiecutter datascience for a good overview of this.  Starting a project Once you have connected to the remote computer and made a tmux session:\n1. Create a virtualenv for each project python3 -m venv ENV  This can be activated using\nsource ENV/bin/activate  To save the package requirements, use\npip freeze \u0026gt; requirements.txt  The purpose of a virtualenv is to isolate each of your projects, allowing you to seperately install dependencies for each project without worrying about conflicting requirements. The requiremnts are easily saved using pip freeze, so it is easy for anyone work on the project using a different computer, because all dependencies can be installed with pip install -r requirements.txt.\n2. Create a git repo for each project Initialize the folder your project is stored in as a git repo using\ngit init \nIf your aren\u0026rsquo;t familair with git, try this tutorial. Make sure to frequently commit changes and backup to a service like Github, Bitbucket or Gitlab. This will be a lifesaver when code is accidnetally deleted, and will make sharing code and switching computers easy.\nIt is useful to include a readme explaing the basics of the code and how to reproduce key results, as well as the requirements.txt file. Working on a project on a new computer will be simple, because all you need to do is clone the repo and install the requirments to get it working.\n3. Jupyter Notebooks  Jupyter notebooks are great for quickly testing ideas and presenting results. They are popular for data science in general, but there can be some issues when running them remotely. There are a few ways to make this work.\nTo start a notebook on the remote machine, specify that no browser is being used, as well as the port. Export this in the .bashrc on the remote machine:\nalias notebook='jupyter notebook --no-browser --port=8889'  Once a notebook is started, you must connect the local to it. This is greek to me, but seems to work. Add this to the local .bashrc:\nalias aws-nb='lsof -ti:8888 | xargs kill -9; ssh -N -f -L localhost:8888:localhost:8889 username@123.45.678.90'  Note: This may not be the most secure way to do this\nNotebooks and virtual environments Before starting a notebook, activate the virtual envrionment and run this:\npip install ipykernel\nipython kernel install --user --name=project1\nThis ensures the correct kernel will be available from inside the notebook. You should be able to select the kernel \u0026ldquo;project1\u0026rdquo; from inside the notebook.\nThe downside of notebooks is they quickly become a mess when there is too much code. It is best to break the code inside the notebook into functions, and keep these in seperate python files outside the notebook. Multiple notebooks can then import the same functions.\nKeep notebooks primarily for exploring data and visualizing results, not for running complex jobs or storing code.\nNotebook Config To ensure the notebook plots correctly and reloads updated functions, I add this into a cell at the top of every notebook:\n%matplotlib inline %load_ext autoreload %autoreload 2  For more complex projects, notebooks will quickly become a mess because there is too much code floating around in each notebook. For functions used multiple times, save them in a seperate .py file, and load them into the notebook.\nNotebooks won\u0026rsquo;t record output on long running processes after your computer has disconnected. More complex jobs should be run using the regualar command line, possibly using Sacred to ensure reproducability.\nConclusion Developing on a remote machine with bigger jobs can be difficult, especially if you\u0026rsquo;ve got limited coding background. Reproducability and iteration speed become much more imnportant when dealing with slow running and complex experiments, so its worth it to take the time to figure out a good method to make this happen. What is here was based on my own experiences suffering through a bad workflow and lack of reproducability, and are mostly based off of trial and error.\n","date":1534204800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534204800,"objectID":"d891a1f5530b1cc2301c2c314162f4ed","permalink":"https://renebidart.com/post/2018-8-14-setup/2018-8-14-deep-learning-remote-machine-setup/","publishdate":"2018-08-14T00:00:00Z","relpermalink":"/post/2018-8-14-setup/2018-8-14-deep-learning-remote-machine-setup/","section":"post","summary":"Basic Set Up To do any deep learning, you\u0026rsquo;ll either need to have set up a VM at a cloud provider (AWS, Azure or paperspace, google, etc.), unless you happen to have a gpu lying around.","tags":null,"title":"Deep Learning Remote Setup","type":"post"},{"authors":null,"categories":null,"content":"I completed the 10 day silent Vipassana Meditation course at the Dhamma Torana center outside Toronto, Canada. It was my first meditation course, and it was an interesting mix of enlightenment and a big test of self control.\ntl;dr:\nThe 10 day Vipassana course is quite unpleasant but totally worthwhile. Yes, you should do it.\nGood Mental Benefits\nMeditation is peddled as a cure for problems in all aspects of your life. This sounds like bullshit, but because it was recommended by so many respected people I figured it was worth a try.\nThey were right. The week following the meditation was far more peaceful than any other in the past few years of my life. I confronted issues that were bothering me, and feel more at peace with myself. I even feel a little more control over my emotions, a little more able to handle awkward or frustrating situations by taking myself out of the moment. It isn\u0026rsquo;t some miracle drug, but it seems to have some significant benefit.\nPhysical benefits\nBefore the meditation I had terrible posture, muscle imbalance and weakness in my core but but wasn\u0026rsquo;t fully aware of it. This course forces you to confront this, because you\u0026rsquo;ll have plenty of time to focus on you posture while sitting in an uncomfortable position all day. It also seems to do much more than just give you better posture. You develop a better mind muscle connection through the practice, enabling you to better activate muscles, and also be more aware of issues in your body. For me this was huge, and did more for me than seeing actual physiotherapists about my issues. Again, not a miracle drug for this, but it feels like it put me on the right path.\nFree\nThe course is totally free, and paid by donation. Sounds too good to be true, but suprisingly there\u0026rsquo;s no fine print and this isn\u0026rsquo;t a scam. You should donate if you find it beneficial, but it will still be the cheapest 10 day \u0026ldquo;vacation\u0026rdquo; of your life.\nNot a cult or religion\nIt sounds a little sketchy to go meditate with random people somehere in the woods in Ontario, but as soon as I arrived these fears were gone. The whole center is run by a bunch of volunteers who really just want to spread the benefits of this meditation.\nWillpower\nAs you\u0026rsquo;ll see below, the 10 days will be a big exercise in strengthing your willpower.\nBad After you leave the meditation center everything looks nicer, colors are brighter and food tastes better. I imagine this is a more mellow version of how a prisioner feels after getting released. You can\u0026rsquo;t help but feel good after being stuck in this environment.\nBoring\nIf sitting quietly in a room all day doesn\u0026rsquo;t sound so exciting, you\u0026rsquo;re not going to like this course. Almost nobody I talked to found the course to be enjoyable. This was by far the most boring 10 days of my life. There is almost no mental stimulation, and for the entire time the meditation consists of feeling sensations in some part of your body. To be honest I hadn\u0026rsquo;t even checked what this meditation was before I arrived, so it was a big shock to find I would be noticing sensations around my nose for three full days, and for the next 7 the sensations in my whole body.\nPainful\nMediation is horrible. No matter how peaceful people may look sitting cross legged, when you discover pains in you back, knees and neck within the first 30 minutes of meditating, you\u0026rsquo;ll have no peace when imagining how the next 10 days will feel.\nFree?\nIt may not cost anything, but 10 days is a huge time commitment for anyone with any semblance of a life. This could be over half of your yearly vacation days. It looks a little more costly when you realise you have to give up that vacation somewhere warm to spend 10 days meditating.\nScience\nIn the evening videos Goenka (the popularizer of this method) will inform you of how scientific meditation is. Don\u0026rsquo;t get too hopeful, because his explainations won\u0026rsquo;t involve hypothesis, theorems, or empirical evidence. Better to take it as a practical exercise than dig to much into his thoughts about subatomic particles.\nWeird Chanting\nChanting is pretty strange, and this will happen multiple times per day during the meditations. This part was certainly never altered to make it more palatable for a western audience, so probably it will be strange. I treated it as another exercise to try to remain equanimous during the chanting.\nWhere do the benefits come from?\nI felt better after the meditation, but how much of this was from the mindfulness meditation itself, and how much is from being forced into this unusual environment of no phone, no computer, no talking for 10 days?\nFor the time of the course very little outside information is entering your brain, so you have nothing to do but to deal with your own thoughts. This is good for sorting out some issues you may have, and a lot of this will happen even if you don\u0026rsquo;t meditate at all.\nMy guess is that the combination of the mindfulness meditation goes very well with this lask of information. You would see benefits from isolating yourself from technology for this time, but when combined with the meditation, you also learn a better way to deal with all the thoughts that are coming toward you.\nThere is real research supporting the benefits of mindfulness, and so clearly this is a good idea, I just think it would be interesting to isolate the benefit of removing technology vs. meditation vs. exercising your willpower.\nShould you do it? The retreat is like a little reset button for your life. It is a great way to generally improve your life, and if you keep up some amount of meditation practice they claim these results will last. It is also easy to start new habits after leaving the meditation, so you are in a very good position to improve yourself in whatever way you see fit.\nIn conclusion, I see this meditation as a way of sacrificing 10 days for the chance at living a more peaceful life. This is a good gamble.\n","date":1522022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1522022400,"objectID":"0b65e836fa0158e522629bf8bb3f73d3","permalink":"https://renebidart.com/post/2018-03-26-vipassana/2018-03-26-the-good-the-bad-and-the-weird-of-vipassana-meditation/","publishdate":"2018-03-26T00:00:00Z","relpermalink":"/post/2018-03-26-vipassana/2018-03-26-the-good-the-bad-and-the-weird-of-vipassana-meditation/","section":"post","summary":"I completed the 10 day silent Vipassana Meditation course at the Dhamma Torana center outside Toronto, Canada. It was my first meditation course, and it was an interesting mix of enlightenment and a big test of self control.","tags":null,"title":"The Good, the Bad and the Weird of Vipassana Meditation","type":"post"},{"authors":null,"categories":null,"content":"Stratified Sampling We want to get the estimate the mean of a population, and this population is broken into different groups. As long as these groups are homogeneous, we can produce a better estimate by estimating the means of the groups individually. For example, we could estimate the mean math ability of students in Ontario by dividing it up by schools. By allocating more samples to the schools with higher number of students and variance in ability, we can get a better estimate overall.\nBack in 1934 Jerzy Neyman proved that the optimal way to allocate the number of samples for each stratum, $n_h$ is proportional to its standard deviation, $\\sigma_{yh}$, and its size $W_h$:\n$$ n_h \\propto W_h\\sigma_{yh} $$\nIn reality we won\u0026rsquo;t know the stratum variances, so alternative methods using auxiliary information or two stage sampling to get an estimate of the variances are used. The two sample method is not optimal, and auxillary information may not be availiable.\nToday there are situations where we can take samples sequentially, which may not have been possible when these methods were first developed, such as with an online survey where it is easy to distribute and quick to analyse results, but may be costly to pay an individual to complete it. Here we will allocate each sample individually, but how do we pick which strata to sample from?\nSequential Sampling we will think of sampling over a number of timne steps, taking one sample from a given stratum at each time. The goal is to sample from the stratum that will cause the largest expected decrease in variation of our estimate, $\\bar{y}$ at each iteration. We would would like to find $i$ to maximize: $$V(\\bar{y}{st, i})-V(\\bar{y{st}}) = $$\n$$ \\sum\\limits_{h=1}^{H}W_{h, i}^2(1-\\frac{n_{h,i}}{N_{h,i}})\\frac{s_{yh,i}^2}{n_h{,i}}-\\sum\\limits_{h=1}^{H}W_h^2(1-\\frac{n_h}{N_h})\\frac{s_{yh}^2}{n_h} $$\nThis says we would like to maximize the decrease in variance\nHere $$\\bar{y}{st, i}$$ is used to denote this after another sample is taken from stratum $$i$$. For simplicity, assume that all strata have the same size, so $$W_h$$ are equal. Then, we can notice that all the terms in this sum are equal, except for those relating to stratum $$i$$: \\begin{equation} (1-(\\frac{n_i+1}{N_i}))\\frac{s_i^{*2}}{n_i+1} - (1-(\\frac{n_i}{N_i}))\\frac{s_i^{2}}{n_i} \\end{equation} If we assume $s_i^{*2}=s_i^{2}$, after rearranging we obtain the objective as: $\\max{i} \\frac{s_i^{2}}{n(n+1)}$\nThis shows that the expected benefit is increasing in the variance of the sample, as would be expected from Neyman allocation, and is decreasing in the number of samples already taken from that strata, because as more samples are taken from a given strata, the we have a better estimate of its\u0026rsquo; mean.\nProcedure:  Take a small number of samples from all strata, compute variance, and the expected benefit estimates for all strata. Compute the expected benefit for each of the strata Sample from the strata with maximum expected benefit Repeat this until a total of $n$ samples are taken  Implementation Detail: To make this computationally efficient, we can use the iterative update formulas for the mean and standard deviation. Using this means previous samples don\u0026rsquo;t have to be stored.\nConclusion This is a simple way to take advantage sequental sampling using stratified sampling. Compared to the two-sample method, this will more efficiently allocate samples, so should result in lower variance of the estimator. More details are here.\n","date":1516924800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1516924800,"objectID":"8031d5cb9818d2bc1f299cb3616aaacc","permalink":"https://renebidart.com/post/2018-01-26-sampling/2018-01-26-sequential-stratified-sampling/","publishdate":"2018-01-26T00:00:00Z","relpermalink":"/post/2018-01-26-sampling/2018-01-26-sequential-stratified-sampling/","section":"post","summary":"Stratified Sampling We want to get the estimate the mean of a population, and this population is broken into different groups. As long as these groups are homogeneous, we can produce a better estimate by estimating the means of the groups individually.","tags":null,"title":"Sequential Stratified Sampling","type":"post"},{"authors":null,"categories":null,"content":"The hype continues Like many of the attendees, this was my first NIPS conference. Overall a great experience, and I doubt there is any substitute for meeting interesting people and learning about the current state of machine learning. Here I’ll mention a few of the highlights of the conference for me, and some of the weirdness.\nMoney is flooding in from everywhere in AI, with desperate investors trying to get a piece of the pie. Free alcohol and parties every night was unexpected for an academic conference:\n        :\u0026ndash;:   If this doesn’t signal a bubble I don’t know what does    With this level of hype there can be some downsides:\n        Over 8000 people attended, and they all needed to register    Rigor vs. Accuracy In the last few years the field of machine learning has become obsessed with the performance provided by larger and less interpretable deep neural networks. Not everyone is in love with the hype. According to Ali Rahimi:\n Machine learning isn’t the new electricity, it is alchemy. We should start from simple, easy to understand things and then move onto more complex things. Currently we apply brittle optimization techniques to loss surfaces we don’t understand\n Yann LeCun’s response:\n We often use methods before we fully understand them in engineering and it has made the world a better place. Don’t throw the baby out with the bathwater\n There was also a debate about model interpretability, where many of the same arguments are thrown around:\n Do you really want to be diagnosed by something you don’t understand? vs.\n  We will choose an accurate model over an interpretable one when it is our body on the line. I think when deploying a model for real use we are facing a trade off between a complex model, and an ensemble of a simple model and human judgement. We know the complex model performs better on the test data, but we assume in real use the data distribution will change. The human/simple model will be more robust to changes in data distribution, because of the human’s debugging ability.\n We must decide if the increased accuracy of the complex model makes up for the danger of it generalizing less well than the human/simple model ensemble. Unfortunately I have no idea how to quantify how much better one model may generalize than the other, so we will continue arguing.\n ML for Healthcare Fei-Fei Li and the Stanford group noted that there are plenty of issues throughout the hospital — not just in pathology and radiology. They proposed some interesting problems and solutions:\n  Hand Hygiene — More people dying from hospital caused infection than car crashes. They proposed using a CNN with spatial transformer net along with a tracking system to see peoples movement through the hospital.  Surgery evaluation — Using a CNN, locate and follow the movement of surgeon’s tools. Use unnecessary movements as a proxy for surgeons skill.  Greg Corrado gave a interesting talk about how ML will change medicine:\n Diagnostics — We know there will be a massive expansion in the use of imaging and the information that we get out of it. The question now is how do doctors and machines collaborate? There is always the problem of doctors not using the technology if it disrupts their workflow. We have lots of advances in pathology and radiology so far, and this will start saving lives very soon. Care management and decision support — Electronic medical records are a mess with many coding systems and inconsistencies, and most data isn’t used by humans or Ml methods. Unstructured data is more difficult than something like radiology, but promising results have been shown. There is a lot of promise in making EHR smart, but this may take decades. Medical records -\u0026gt;fihr resources Personalized medicine — We are just getting started on this, but there are promising results in genetics and eventually this will be a crucial part of healthcare. Eventually we will use some kind of omics for all routine medical prescription, but this may be a long time away.  Medical Imaging  We need more adaptive radiation treatment. Currently patients are moving too freely, and we don’t properly take into account of tumour location over time. We have a good idea how normal tissue responds to radiation, but are uncertain about tumour response, so more accuracy in radiation targeting would allow for higher doses and less side effects. 1% increase in radiation power can increase treatment success probability 1–2%. We must focus on end to end approaches for detection, segmentation, etc. Currently we often have an intermediate step of creating something that is visible to the doctor, but this may be inferior to an end to end model. Thanks to niftynet, routine medical imaging analysis will become much easier.  Practical Concerns:  Top down (ICU data) vs. Bottom up data (Fitbit). Physicians traditionally only look at data originating from the hospital, if they look at it at all, but now patients are creating their own data. Physicians are not trained or incentivized to interpret the quantified self data. If the incentives and training are set up correctly this might change. We don’t have full data sharing because hospitals compete with each other in the private healthcare system. This was a US centric discussion, and these incentives are completely different in other parts of the world. Work in this field has gone from image segmentation and classification to clinical problems. For work to become practically useful, researchers will need to have clinical collaborators. Now we have less purely technical challenges and more about how to introduce methods that fit into doctor’s workflow, and best take advantage of doctor’s and machine learning together. GAN generated data can’t make up for lack of data in the first place, but may be useful for anonymization of sensitive data, so it can still be used to train models. (There was argument over this, but I think augmentation with GAN generated images can’t be better using a model that generalizes well. GANs can’t get you outside of the space of images you’ve seen, so there is no replacement for examples of unusual illness) Research may not be addressing clinical problems as fast as we think. Collaboration between doctors and computer scientists still lower than we would like. Interactive training of models with radiologist’s annotations may be a more efficient way to get training data. Radiologists won’t be out of work anytime soon because imaging is already increasing faster than radiologists are being trained. Imaging use could increase even further as we discover ways to extract more information from each image. Radiologists work will change, and they may become overly specialized because all the easy tasks will be done by ai. Future radiologists may be the data scientists of medicine, using their understanding to improve models. Translating advances in AI into the hospital is difficult because improving one task is not the same as improving the whole diagnostic workflow. We need to look at the entire workflow in the hospital and see see how tech makes the process better overall. Currently hospitals buy static tools. With machine learning we can have tools that adapt to different problems, so there will be a different relationship between vendor and consumer. I was surprised at the interest in this field. Most of the main tech companies have an interest in the pile of money that is healthcare. This being said, it will still take years for anything to be implemented. Because of the investment in healthcare its important for researchers/startups to not compete directly with with google et al. on segmentation and detection accuracy unless they have new methods. Slight architecture tweaks probably won’t beat millions of labelled images. The room for improvement is in better collaborations and more novel methods.   Fairness Now that we have seen so many successes in machine learning there’s increased interest in promoting fairness in AI. Here are some take aways from the presentations on bias in AI:\n Data can be biased either because of a group being underrepresented, or because data can incorporate previous biases. For example, blacks may be predicted to be more likely to be criminals because they were arrested more frequently because of racial profiling. Indirect effects of bias are important too. You should think about the effects of what you are doing on people. Not only direct effects like not hiring someone, but if you are creating an unfair representation of individuals that could harm them. For example the google search for ‘CEO’ yields primarily white males and this lack of representation of other groups will make them feel they are not CEO material.  These discussions were useful, but in the end we were left with more questions than answers:\n There are some fundamental contradictions between commonly accepted definitions of fairness. How will we decide what is good? Should a search result for CEO only return white males because this is the mode of the population? Should it return 8–10% female because that is the true value? Or should it return 50% female because we decided that is the socially best number? ** There is the trade off of now vs. future. Should we sacrifice some efficiency now, so a marginalized group is better represented in the future? And even if we decide what to do, there will be the conflict between what we consider acceptable and what clients want. What to do when our boss suggests something questionable? We must ask ourselves who will benefit and who will be harmed by our work?  Even for someone who isn’t particularly interested in fairness, it is important to pay attention to this work. Now that these discussions are happening, ignorance will not be an excuse for mistakes like the Google made, and there will be bigger repercussions for someone who harms marginalized groups through machine learning.\n Meta Learning/Reinforcement Learning/Self-Play/Generalization I knew nothing of this field before the conference, but this is the topic I found most interesting. I will be cracking open the deep RL book soon, but since that hasn’t happened yet don’t trust anything written here.\nJosh Tenenbaum explained that human learning doesn’t happen at an single level. There are different processes in our brain, operating at different time scales:\n Perception (\u0026lt;1 second) Thinking (\u0026lt;1min) Learning (\u0026gt;1minute) Development(lifetime) Evolution(many lifetimes)  A lot of work seems to be trying take the idea that we learn in different ways in different time scales into account in order to make models generalize better or train faster:\n We don’t relearn physics with every task we do, so RL methods shouldn’t have to either. Current RL must learn things that we should take as given like physics. Our world is set up with a specific physics, so there is a huge search space of alternatives we don’t need to look at. Solve by using explicit models using probabilistic programming. (Josh Tenenbaum) Meta Learning — Our reinforcement learning algorithms are extremity inefficient compared to how people learn. We should learn the algorithm by training across multiple environments and see which generalize better. Also we can use experience replay to deal with the issue of lack of rewards in RL as shown as Yann Le Cun’s cake (Pieter Abbeel). Schmidhuber reminded everyone that their definition of meta learning was incorrect, and that he had been doing it since 1990. He made it clear that anything resembling transfer learning is not meta learning. Learned checkpointing systems for models, models inventing their own problems, and slow-fast networks were some of what he contributed. I imagine there would be a lot of value in going back to his older papers. Optimal reward — Currently we confound our own preferences, and the loss the agent optimizes. Alternatively we can think of finding an internal reward function that is optimal to train the agent. Capsules — I’m not sure how this fits in with the rest, but it is an attempt to make visual recognition generalize better by having a more restrictive architecture than normal CNNs, making them learn descriptions of objects. This should be closer to the human visual system, and work better with changes in viewpoint and small data. Self-Play — Allows use to create complex strategies from simple environments by having agents compete. This is a way to convert compute into data, and as the game goes on we learn more valuable things. Problem is making sure these games don’t get stuck at very basic equilibria. This is how AlphaZero dominated go and chess. IIya Sutskever seemed very confident this is the way forward to create better AI.   Random Stuff:  “To get an extra 5% to bold the number in your table, you change the architecture. This is to make a model easier to optimize, not make it more flexible.” — I forget who said this, but this is a good reminder of how we can’t think about deep learning in the same way as more simple models. In the context on interpretability, we should focus on outliers, as these can give us the most information. — I forget who said this. Schmidhuber’s ways are extremely off-putting, but I imagine I’d be pretty pissed off too if I had not been recognized for my work to the extent he has. Maybe I’m wrong, but his group seems to have done a lot of good work in the past Andrej Karpathy, IIya Sutskever and Elon Musk seem quite confident in the speed we will see AGI sooner than we expect. Normally I would dismiss people who say this, but these people are the few who know something most of us don’t. China will dominate machine learning driven healthcare because of their huge amounts of data and lack of privacy concerns. Genetics, Bayesian Deep learning, GANs, Art Generation and many other topics received plenty attention at this conference, just not from me. There were of non-tech firms like hedge funds, but less interest in this from the participants. Also I was surprised at the number of Chinese firms trying to grab up the best ml researchers. Nvidia, Intel, and even Tesla are making new DL chips. Time to end this monopoly and obscene prices. Tencent had the best free t-shirt. Quality stuff. The hype here is insane. Will we have the type of bubble we had in 1999 and the corresponding crash, even though the underlying technology was correct? We know machine learning will be the way forward, but real applications may take a while to get sorted out, and there could be plenty of time in between for another little AI winter.  ","date":1513123200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1513123200,"objectID":"8d74f87783ed458d34af79321f74fbc4","permalink":"https://renebidart.com/post/2017-12-13-nips/2017-12-13-nips-2017-highlights/","publishdate":"2017-12-13T00:00:00Z","relpermalink":"/post/2017-12-13-nips/2017-12-13-nips-2017-highlights/","section":"post","summary":"The hype continues Like many of the attendees, this was my first NIPS conference. Overall a great experience, and I doubt there is any substitute for meeting interesting people and learning about the current state of machine learning.","tags":null,"title":"NIPS 2017 Highlights","type":"post"},{"authors":null,"categories":null,"content":"neyman-paper\u0026mdash; author: Rene Bidart date: \u0026ldquo;2020-01-11T00:00:00Z\u0026rdquo; title: What I Learned in Hong Kong 香港被和谐 I spent the last few months interning at Shell Street Labs in Hong Kong (September-December 2020), and this opened my eyes to the mess that is media, propaganda, and group identity.\nMedia Bullshit I made it a point to follow some Hong Kong, Western, and CCP news sources on twitter. The news was divided over if the police or the protesters caused of most of the violence, but it was all sensationalist. The one thing they were in agreement about was that Hong Kong and the protests were dangerous, but this was the only thing that wasn\u0026rsquo;t true.\nI expected the protests to be filled with violent people ready for war, like what was shown in the news. The reality was totally different, it was mostly innocent innocent, skinny university age kids, with a few elderly people and children. There were so many couples holding hands walking through the protests, I couldn\u0026rsquo;t believe what was going on. This didn\u0026rsquo;t look like they were capable of anything like I\u0026rsquo;d seen in the news. Most people ran from tear gas, not towards it.\nThe violence and destruction shown on the news did happen, but it was a small groups of people at the end of a sea of protesters. On the news the most extreme events are repeated over and over until another crazy thing happens, that can replaces. At the end of the day Hong Kong is still much less dangerous than a place like Detroit, no matter how much more media coverage it gets.\nBoth the protesters and the CCP media were promoting bullshit. I expected more from the CCP, but really both sides continually distort reality to convince you of their side of the story. The desire to maximise views can be as misleading as intentional government propaganda. Now I have less trust in anything I see. I always questioned things for accuracy, but now I the focus is more on how the truth is distorted rather than outright fake news.\nNothing brings people together more than a common enemy At first I couldn\u0026rsquo;t understand why so many people would be willing to protest week after week, wasting their weekends in the streets? There was something more to this, and it wasn\u0026rsquo;t until I actually saw the protest that I understood.\nEven as an outsider looking in seeing these protests gives you a strange feeling. All these masked people who barely knew each other had a connection I\u0026rsquo;ve never seen before, it felt like this was the most united I\u0026rsquo;ve ever seen a group of people. Having an enemy unites people like nothing else, and I\u0026rsquo;ve noticed more and more this is the backbone of propaganda across the world.\nHow much does having a clear enemy explain the recent success of China and the current dysfunction in the west? Would there be so much partisan bullshit if we feared China as much as they fear us? Would there be so much pressure to attack each other over pronouns and definitions of feminism if we had some real danger? I don\u0026rsquo;t know the answer, but realising that something so horrible is what unites us best wasn\u0026rsquo;t a good feeling.\nI think there\u0026rsquo;s another reason protesting became popular, and that\u0026rsquo;s that it became cool. Protesting is a high status activity for young people, and social media makes it possible for everyone to know you\u0026rsquo;re protesting, so you\u0026rsquo;re more than another masked person in a crowd. There\u0026rsquo;s protest art all over social media, and even plenty of Tinder profiles saying \u0026ldquo;No cops\u0026rdquo; or \u0026ldquo;香港人加油\u0026rdquo;.\nDivision Why is it that people who agree on 99% of things and are good friends would be willing to kill each other for some abstract idea like nationalism or freedom? I met multiple people who had their relationships with coworkers and family change when this religious disagreement was brought into the forefront. I knew in abstract that this could happen, but seeing this in reality was very uncomfortable.\nIt seemed especially strange for mainland Chinese people, who after living in Hong Kong for many years and even learning the Cantonese language to considered the outsider or even the enemy - someone who was brought here by the CCP to help conquer Hong Kong. Are they only immigrants, or are they settlers like the British were, bringing their own culture and their own language on behalf of the CCP? Modern day colonialists forcing a single definition of what it means to be Chinese? Why must the Mainland Chinese impose their will on the Hong Kong people?\nOr are the protestors the problem, being childish and demanding their own special treatment from China? Or even traitors for preferring Western style governance after all the success of China? Even supporting violence against innocent people to achieve these pointless goals?\nEveryone accuses the other side of being brainwashed. The Hong Kong people are being brainwashed by not having a good nationalist education, and the mainland Chinese people are because of it. But why is it so hard to see the other side?\nI think we\u0026rsquo;re designed to not be open minded. Why do Chinese people will reflexively mention how much better Shenzhen is than Hong Kong whenever Shenzhen is brought up? Or if you mentioned Cantonese is a different language then Mandarin, you’re quickly corrected that it’s a dialect, not a language. How do they come up with this strangely pedantic statement so consistently?\nAt first I thought there was something special about their government\u0026rsquo;s propaganda, that they will not only make someone believe something, but also to consistently be vocal about it. But this isn\u0026rsquo;t right, this is something that happens to us all.\nI think we have a natural defence mechanism to preserve our religion, so whenever we notice a threat (consciously or unconsciously), we attack it. It is similar to why people are so quick to insult Trump, or anything that reminds them people have different opinions. Chinese people on some level know that a\u0026rsquo; preference for Hong Kong over carefully designed Shenzhen in spite of all its problems is an attack on their government, the same way the fact the existence of Trump as president is a constant attack on progressive views.\nHope? I can\u0026rsquo;t help but feel bad for everyone stuck in this situation, it seems like the people of Hong Kong are just pawns for more powerful people. Foreigners use it as their capitalist paradise, either wanting protesters killed for disrupting their way to work / LKF, or siding with protesters but unwilling to do anything to hinder their chance of work in mainland China. The mainland Chinese view it as something to be conquered to preserve the harmony of their great country. The CIA sees this as way to divide China. The Hong Kong government only cares about the richest people and the CCP, resulting in the housing crisis and continued protests.\nIs there a solution? My guess is no, unless the people of Hong Kong embrace Chinese nationalism they will be left for a slow decline by the CCP. This is unlikely, because there has been a decline in Hong Kong people identifying as Chinese since 2008, which is around the time China increased its nationalism, deciding that there was a single way to be Chinese which was not going to include the current culture of Hong Kong.\nBy creating Shenzhen, the CCP has shown that the China can be superior economically to the West, and after seeing this the people of Hong Kong were supposed to see the glory of China. But so many people in Hong Kong are unwilling to give up their values of self determination and freedom, which are totally unacceptable for China. The best way forward for the CCP is to encourage incompetent governments like Carrie Lam that are slowly destroying Hong Kong. Chinese news sources will continue to show the disaster this has caused, both economically and for social harmony, strengthening the resolve of Chinese people that their form of government is best.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"99139fc01737ee9a7688112dcbc0ae11","permalink":"https://renebidart.com/post/2020-01-11-hk/2020-01-11-what-i-learned-in-hong-kong/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/2020-01-11-hk/2020-01-11-what-i-learned-in-hong-kong/","section":"post","summary":"neyman-paper\u0026mdash; author: Rene Bidart date: \u0026ldquo;2020-01-11T00:00:00Z\u0026rdquo; title: What I Learned in Hong Kong 香港被和谐 I spent the last few months interning at Shell Street Labs in Hong Kong (September-December 2020), and this opened my eyes to the mess that is media, propaganda, and group identity.","tags":null,"title":"","type":"post"}]